function Potree(){}function POCLoader(){}function PointAttributeNames(){}function PointAttribute(e,t,o){this.name=e,this.type=t,this.numElements=o,this.byteSize=this.numElements*this.type.size}function PointAttributes(e){if(this.attributes=new Array,this.byteSize=0,this.size=0,null!=e)for(var t in e){var o=e[t];this.attributes.push(o),this.byteSize+=o.byteSize,this.size++}}function LRUItem(e){this.previous=null,this.next=null,this.node=e}function LRU(){this.first=null,this.last=null,this.items={},this.elements=0,this.numPoints=0}Potree.pointLoadLimit=5e7,Potree.workers={},Potree.WorkerManager=function(e){this.code=e,this.instances=[],this.createdInstances=0},Potree.WorkerManager.prototype.getWorker=function(){var e=this.instances.pop();return void 0===e&&(e=Potree.utils.createWorker(this.code),this.createdInstances++),e},Potree.WorkerManager.prototype.returnWorker=function(e){this.instances.push(e)},Potree.WorkerManager.fromUrls=function(e){for(var t="",o=0;o<e.length;o++){var i=e[o],r=new XMLHttpRequest;r.open("GET",i,!1),r.responseType="text",r.overrideMimeType("text/plain; charset=x-user-defined"),r.send(null),200===r.status&&(t+=r.responseText+"\n")}return new Potree.WorkerManager(t)},THREE.PerspectiveCamera.prototype.zoomTo=function(e,t){void 0===t&&(t=1),e.updateMatrixWorld(),this.updateMatrix(),this.updateMatrixWorld();var o=Potree.utils.computeTransformedBoundingBox(e.boundingBox,e.matrixWorld),i=new THREE.Vector3(0,0,-1).applyQuaternion(this.quaternion),r=o.center().sub(i),n=[new THREE.Vector3(o.min.x,o.min.y,o.min.z),new THREE.Vector3(o.min.x,o.min.y,o.min.z),new THREE.Vector3(o.max.x,o.min.y,o.min.z),new THREE.Vector3(o.min.x,o.max.y,o.min.z),new THREE.Vector3(o.min.x,o.min.y,o.max.z),new THREE.Vector3(o.min.x,o.max.y,o.max.z),new THREE.Vector3(o.max.x,o.max.y,o.min.z),new THREE.Vector3(o.max.x,o.min.y,o.max.z),new THREE.Vector3(o.max.x,o.max.y,o.max.z)],a=new THREE.Frustum;a.setFromMatrix((new THREE.Matrix4).multiplyMatrices(this.projectionMatrix,this.matrixWorldInverse));for(var s=Number.MIN_VALUE,l=0;l<n.length;l++){for(var d=n[l],c=Number.MIN_VALUE,u=0;u<a.planes.length-2;u++){var p=a.planes[u],h=new THREE.Ray(d,i),m=h.distanceToPlaneWithNegative(p);c=Math.max(c,m)}s=Math.max(s,c)}var f=i.clone().multiplyScalar(-s);f.multiplyScalar(t),r.add(f),this.position.copy(r)},THREE.Ray.prototype.distanceToPlaneWithNegative=function(e){var t=e.normal.dot(this.direction);if(0==t)return 0==e.distanceToPoint(this.origin)?0:null;var o=-(this.origin.dot(e.normal)+e.constant)/t;return o},POCLoader.load=function(e,t){try{var o=new Potree.PointCloudOctreeGeometry;o.url=e;var i=new XMLHttpRequest;i.open("GET",e,!0),i.onreadystatechange=function(){if(4===i.readyState&&(200===i.status||0===i.status)){var r=JSON.parse(i.responseText);o.octreeDir=0===r.octreeDir.indexOf("http")?r.octreeDir:e+"/../"+r.octreeDir,o.spacing=r.spacing,o.pointAttributes=r.pointAttributes;var n=new THREE.Vector3(r.boundingBox.lx,r.boundingBox.ly,r.boundingBox.lz),a=new THREE.Vector3(r.boundingBox.ux,r.boundingBox.uy,r.boundingBox.uz),s=new THREE.Box3(n,a),l=new THREE.Vector3(0,0,0);l.set(-n.x,-n.y,-n.z),s.min.add(l),s.max.add(l),o.boundingBox=s,o.boundingSphere=s.getBoundingSphere(),o.offset=l,o.loader="LAS"===r.pointAttributes?new Potree.LasLazLoader(r.version):"LAZ"===r.pointAttributes?new Potree.LasLazLoader(r.version):new Potree.BinaryLoader(r.version);var d={},c="r",u=new Potree.PointCloudOctreeGeometryNode(c,o,s);u.level=0,u.numPoints=r.hierarchy[0][1],o.root=u,o.root.load(),d[c]=u;for(var p=1;p<r.hierarchy.length;p++){var c=r.hierarchy[p][0],h=r.hierarchy[p][1],m=parseInt(c.charAt(c.length-1)),f=c.substring(0,c.length-1),v=d[f],y=c.length-1,s=POCLoader.createChildAABB(v.boundingBox,m),E=new Potree.PointCloudOctreeGeometryNode(c,o,s);E.level=y,E.numPoints=h,v.addChild(E),d[c]=E}o.nodes=d,t(o)}},i.send(null)}catch(r){console.log("loading failed: '"+e+"'"),console.log(r)}},POCLoader.loadPointAttributes=function(e){for(var t=e.pointAttributes,o=new PointAttributes,i=0;i<t.length;i++){var r=PointAttribute[t[i]];o.add(r)}return o},POCLoader.createChildAABB=function(e,t){var o,i,o=(THREE.Vector3,e.min),i=e.max,r=(new THREE.Vector3).copy(i).sub(o).multiplyScalar(.5),n=new THREE.Vector3(r.x,0,0),a=new THREE.Vector3(0,r.y,0),s=new THREE.Vector3(0,0,r.z),l=o,d=(new THREE.Vector3).add(o).add(r);return 1===t?(o=(new THREE.Vector3).copy(l).add(s),i=(new THREE.Vector3).copy(d).add(s)):3===t?(o=(new THREE.Vector3).copy(l).add(s).add(a),i=(new THREE.Vector3).copy(d).add(s).add(a)):0===t?(o=l,i=d):2===t?(o=(new THREE.Vector3).copy(l).add(a),i=(new THREE.Vector3).copy(d).add(a)):5===t?(o=(new THREE.Vector3).copy(l).add(s).add(n),i=(new THREE.Vector3).copy(d).add(s).add(n)):7===t?(o=(new THREE.Vector3).copy(l).add(r),i=(new THREE.Vector3).copy(d).add(r)):4===t?(o=(new THREE.Vector3).copy(l).add(n),i=(new THREE.Vector3).copy(d).add(n)):6===t&&(o=(new THREE.Vector3).copy(l).add(n).add(a),i=(new THREE.Vector3).copy(d).add(n).add(a)),new THREE.Box3(o,i)},PointAttributeNames.POSITION_CARTESIAN=0,PointAttributeNames.COLOR_PACKED=1,PointAttributeNames.COLOR_FLOATS_1=2,PointAttributeNames.COLOR_FLOATS_255=3,PointAttributeNames.NORMAL_FLOATS=4,PointAttributeNames.FILLER=5;var PointAttributeTypes={DATA_TYPE_DOUBLE:{ordinal:0,size:8},DATA_TYPE_FLOAT:{ordinal:1,size:4},DATA_TYPE_INT8:{ordinal:2,size:1},DATA_TYPE_UINT8:{ordinal:3,size:1},DATA_TYPE_INT16:{ordinal:4,size:2},DATA_TYPE_UINT16:{ordinal:5,size:2},DATA_TYPE_INT32:{ordinal:6,size:4},DATA_TYPE_UINT32:{ordinal:7,size:4},DATA_TYPE_INT64:{ordinal:8,size:8},DATA_TYPE_UINT64:{ordinal:9,size:8}},i=0;for(var obj in PointAttributeTypes)PointAttributeTypes[i]=PointAttributeTypes[obj],i++;PointAttribute.POSITION_CARTESIAN=new PointAttribute(PointAttributeNames.POSITION_CARTESIAN,PointAttributeTypes.DATA_TYPE_FLOAT,3),PointAttribute.RGBA_PACKED=new PointAttribute(PointAttributeNames.COLOR_PACKED,PointAttributeTypes.DATA_TYPE_INT8,4),PointAttribute.COLOR_PACKED=PointAttribute.RGBA_PACKED,PointAttribute.RGB_PACKED=new PointAttribute(PointAttributeNames.COLOR_PACKED,PointAttributeTypes.DATA_TYPE_INT8,3),PointAttribute.NORMAL_FLOATS=new PointAttribute(PointAttributeNames.NORMAL_FLOATS,PointAttributeTypes.DATA_TYPE_FLOAT,3),PointAttribute.FILLER_1B=new PointAttribute(PointAttributeNames.FILLER,PointAttributeTypes.DATA_TYPE_UINT8,1),PointAttributes.prototype.add=function(e){this.attributes.push(e),this.byteSize+=e.byteSize,this.size++},PointAttributes.prototype.hasColors=function(){for(var e in this.attributes){var t=this.attributes[e];if(t.name===PointAttributeNames.COLOR_PACKED)return!0}return!1},PointAttributes.prototype.hasNormals=function(){for(var e in this.attributes){var t=this.attributes[e];if(t===PointAttribute.NORMAL_FLOATS)return!0}return!1},Potree.BinaryLoader=function(e){this.version="string"==typeof e?new Potree.Version(e):e},Potree.BinaryLoader.prototype.newerVersion=function(){},Potree.BinaryLoader.prototype.load=function(e){if(!e.loaded){var t=e.pcoGeometry.octreeDir+"/"+e.name;this.version.newerThan("1.3")&&(t+=".bin");var o=this,i=new XMLHttpRequest;i.open("GET",t,!0),i.responseType="arraybuffer",i.overrideMimeType("text/plain; charset=x-user-defined"),i.onreadystatechange=function(){if(4===i.readyState)if(200===i.status||0===i.status){var r=i.response;o.parse(e,r)}else console.log("Failed to load file! HTTP status: "+i.status+", file: "+t)};try{i.send(null)}catch(r){console.log("fehler beim laden der punktwolke: "+r)}}},Potree.BinaryLoader.prototype.parse=function(e,t){for(var o=new THREE.BufferGeometry,i=t.byteLength/16,r=new Float32Array(3*i),n=new Float32Array(3*i),a=new ArrayBuffer(4*i),s=new THREE.Color,l=new Float32Array(t),d=new Uint8Array(t),c=new Uint32Array(a),u=0;i>u;u++)r[3*u+0]=l[4*u+0]+e.pcoGeometry.offset.x,r[3*u+1]=l[4*u+1]+e.pcoGeometry.offset.y,r[3*u+2]=l[4*u+2]+e.pcoGeometry.offset.z,s.setRGB(d[16*u+12],d[16*u+13],d[16*u+14]),n[3*u+0]=s.r/255,n[3*u+1]=s.g/255,n[3*u+2]=s.b/255,c[u]=u;o.addAttribute("position",new THREE.BufferAttribute(r,3)),o.addAttribute("color",new THREE.BufferAttribute(n,3)),o.addAttribute("indices",new THREE.BufferAttribute(a,1)),o.boundingBox=e.boundingBox,e.geometry=o,e.loaded=!0,e.loading=!1,e.pcoGeometry.numNodesLoading--},Potree.LasLazLoader=function(e){this.version="string"==typeof e?new Potree.Version(e):e},Potree.LasLazLoader.prototype.load=function(e){if(!e.loaded){var t=e.pcoGeometry.pointAttributes,o=e.pcoGeometry.octreeDir+"/"+e.name+"."+t.toLowerCase(),i=this,r=new XMLHttpRequest;r.open("GET",o,!0),r.responseType="arraybuffer",r.overrideMimeType("text/plain; charset=x-user-defined"),r.onreadystatechange=function(){if(4===r.readyState)if(200===r.status){var t=r.response;i.parse(e,t)}else console.log("Failed to load file! HTTP status: "+r.status+", file: "+o)},r.send(null)}},Potree.LasLazLoader.progressCB=function(){},Potree.LasLazLoader.prototype.parse=function(e,t){var o=new LASFile(t),i=new Potree.LasLazBatcher(e);return Promise.resolve(o).cancellable().then(function(e){return e.open().then(function(){return e.isOpen=!0,e}).catch(Promise.CancellationError,function(t){return e.close().then(function(){throw t})})}).then(function(e){return e.getHeader().then(function(t){return[e,t]})}).then(function(e){var t=e[0],o=e[1],r=1,n=0,a=1>=r?o.pointsCount:o.pointsCount/r,s=function(){var e=t.readData(1e6,0,r);return e.then(function(e){return i.push(new LASDecoder(e.buffer,o.pointsFormatId,o.pointsStructSize,e.count,o.scale,o.offset,o.mins,o.maxs)),n+=e.count,Potree.LasLazLoader.progressCB(n/a),e.hasMoreData?s():(o.totalRead=n,o.versionAsString=t.versionAsString,o.isCompressed=t.isCompressed,[t,o,i])})};return s()}).then(function(e){var t=e[0];return Potree.LasLazLoader.progressCB(1),t.close().then(function(){return t.isOpen=!1,Promise.delay(200).cancellable()}).then(function(){return e.slice(1)})}).catch(Promise.CancellationError,function(e){if(o.isOpen)return o.close().then(function(){throw o.isOpen=!1,e});throw e})},Potree.LasLazLoader.prototype.handle=function(){},Potree.LasLazBatcher=function(e){this.push=function(t){var o=Potree.workers.lasdecoder.getWorker(),i=new THREE.Vector3(t.mins[0],t.mins[1],t.mins[2]),r=new THREE.Vector3(t.maxs[0],t.maxs[1],t.maxs[2]);i.add(e.pcoGeometry.offset),r.add(e.pcoGeometry.offset),o.onmessage=function(n){for(var a=new THREE.BufferGeometry,s=t.pointsCount,l=n.data.position,d=n.data.color,c=n.data.intensity,u=new Uint8Array(n.data.classification),p=new Float32Array(u.byteLength),h=new Uint8Array(n.data.returnNumber),m=new Float32Array(h.byteLength),f=new Uint16Array(n.data.pointSourceID),v=new Float32Array(f.length),y=new ArrayBuffer(4*s),E=new Uint32Array(y),T=new THREE.Box3,g=new Float32Array(l),P=0;s>P;P++)p[P]=u[P],m[P]=h[P],v[P]=f[P],E[P]=P,T.expandByPoint(new THREE.Vector3(g[3*P+0],g[3*P+1],g[3*P+2]));a.addAttribute("position",new THREE.BufferAttribute(new Float32Array(l),3)),a.addAttribute("color",new THREE.BufferAttribute(new Float32Array(d),3)),a.addAttribute("intensity",new THREE.BufferAttribute(new Float32Array(c),1)),a.addAttribute("classification",new THREE.BufferAttribute(new Float32Array(p),1)),a.addAttribute("returnNumber",new THREE.BufferAttribute(new Float32Array(m),1)),a.addAttribute("pointSourceID",new THREE.BufferAttribute(new Float32Array(v),1)),a.addAttribute("indices",new THREE.BufferAttribute(y,1)),a.boundingBox=new THREE.Box3(i,r),e.boundingBox=a.boundingBox,e.geometry=a,e.loaded=!0,e.loading=!1,e.pcoGeometry.numNodesLoading--,Potree.workers.lasdecoder.returnWorker(o)};var n={buffer:t.arrayb,numPoints:t.pointsCount,pointSize:t.pointSize,pointFormatID:2,scale:t.scale,offset:t.offset,mins:[e.pcoGeometry.boundingBox.min.x,e.pcoGeometry.boundingBox.min.y,e.pcoGeometry.boundingBox.min.z],maxs:[e.pcoGeometry.boundingBox.max.x,e.pcoGeometry.boundingBox.max.y,e.pcoGeometry.boundingBox.max.z],bbOffset:[e.pcoGeometry.offset.x,e.pcoGeometry.offset.y,e.pcoGeometry.offset.z]};o.postMessage(n,[n.buffer])}},Potree.PointSizeType={FIXED:0,ATTENUATED:1,ADAPTIVE:2},Potree.PointShape={SQUARE:0,CIRCLE:1},Potree.PointColorType={RGB:0,COLOR:1,DEPTH:2,HEIGHT:3,INTENSITY:4,INTENSITY_GRADIENT:5,OCTREE_DEPTH:6,POINT_INDEX:7,CLASSIFICATION:8,RETURN_NUMBER:9,SOURCE:10},Potree.PointCloudMaterial=function(e){e=e||{};var t=new THREE.Color(0),o=THREE.ImageUtils.generateDataTexture(2048,1,t);o.magFilter=THREE.NearestFilter,this.visibleNodesTexture=o;var i=e.size||1,r=e.minSize||1,n=1;this._pointSizeType=Potree.PointSizeType.ATTENUATED,this._pointShape=Potree.PointShape.SQUARE,this._interpolate=!1,this._pointColorType=Potree.PointColorType.RGB,this._octreeLevels=6,this.gradientTexture=Potree.PointCloudMaterial.generateGradient();var a={},s={spacing:{type:"f",value:1},fov:{type:"f",value:1},screenWidth:{type:"f",value:1},screenHeight:{type:"f",value:1},near:{type:"f",value:.1},far:{type:"f",value:1},uColor:{type:"c",value:new THREE.Color(16711680)},opacity:{type:"f",value:1},size:{type:"f",value:10},minSize:{type:"f",value:2},nodeSize:{type:"f",value:n},heightMin:{type:"f",value:0},heightMax:{type:"f",value:1},intensityMin:{type:"f",value:0},intensityMax:{type:"f",value:1},visibleNodes:{type:"t",value:this.visibleNodesTexture},pcIndex:{type:"f",value:0},gradient:{type:"t",value:this.gradientTexture}};this.setValues({uniforms:s,attributes:a,vertexShader:this.getDefines()+Potree.PointCloudMaterial.vs_points.join("\n"),fragmentShader:this.getDefines()+Potree.PointCloudMaterial.fs_points_rgb.join("\n"),vertexColors:THREE.VertexColors,size:i,minSize:r,nodeSize:n,pcIndex:0,alphaTest:.9})},Potree.PointCloudMaterial.prototype=new THREE.RawShaderMaterial,Potree.PointCloudMaterial.prototype.updateShaderSource=function(){var e={};this.pointColorType===Potree.PointColorType.INTENSITY||this.pointColorType===Potree.PointColorType.INTENSITY_GRADIENT?e.intensity={type:"f",value:[]}:this.pointColorType===Potree.PointColorType.CLASSIFICATION?e.classification={type:"f",value:[]}:this.pointColorType===Potree.PointColorType.RETURN_NUMBER?e.returnNumber={type:"f",value:[]}:this.pointColorType===Potree.PointColorType.SOURCE&&(e.pointSourceID={type:"f",value:[]}),this.setValues({attributes:e,vertexShader:this.getDefines()+Potree.PointCloudMaterial.vs_points.join("\n"),fragmentShader:this.getDefines()+Potree.PointCloudMaterial.fs_points_rgb.join("\n")}),this.setValues(1===this.opacity?{blending:THREE.NoBlending,transparent:!1,depthTest:!0,depthWrite:!0}:{blending:THREE.AdditiveBlending,transparent:!0,depthTest:!1,depthWrite:!0}),this.needsUpdate=!0},Potree.PointCloudMaterial.prototype.getDefines=function(){var e="";return this.pointSizeType===Potree.PointSizeType.FIXED?e+="#define fixed_point_size\n":this.pointSizeType===Potree.PointSizeType.ATTENUATED?e+="#define attenuated_point_size\n":this.pointSizeType===Potree.PointSizeType.ADAPTIVE&&(e+="#define adaptive_point_size\n",e+="#define octreeLevels "+Math.max(0,this._octreeLevels-2).toFixed(1)+"\n"),this.pointShape===Potree.PointShape.SQUARE?e+="#define square_point_shape\n":this.pointShape===Potree.PointShape.CIRCLE&&(e+="#define circle_point_shape\n"),this._interpolate&&(e+="#define use_interpolation\n"),this._pointColorType===Potree.PointColorType.RGB?e+="#define color_type_rgb\n":this._pointColorType===Potree.PointColorType.COLOR?e+="#define color_type_color\n":this._pointColorType===Potree.PointColorType.DEPTH?e+="#define color_type_depth\n":this._pointColorType===Potree.PointColorType.HEIGHT?e+="#define color_type_height\n":this._pointColorType===Potree.PointColorType.INTENSITY?e+="#define color_type_intensity\n":this._pointColorType===Potree.PointColorType.INTENSITY_GRADIENT?e+="#define color_type_intensity_gradient\n":this._pointColorType===Potree.PointColorType.OCTREE_DEPTH?e+="#define color_type_octree_depth\n":this._pointColorType===Potree.PointColorType.POINT_INDEX?e+="#define color_type_point_index\n":this._pointColorType===Potree.PointColorType.CLASSIFICATION?e+="#define color_type_classification\n":this._pointColorType===Potree.PointColorType.RETURN_NUMBER?e+="#define color_type_return_number\n":this._pointColorType===Potree.PointColorType.SOURCE&&(e+="#define color_type_source\n"),e},Object.defineProperty(Potree.PointCloudMaterial.prototype,"spacing",{get:function(){return this.uniforms.spacing.value},set:function(e){this.uniforms.spacing.value!==e&&(this.uniforms.spacing.value=e)}}),Object.defineProperty(Potree.PointCloudMaterial.prototype,"fov",{get:function(){return this.uniforms.fov.value},set:function(e){this.uniforms.fov.value!==e&&(this.uniforms.fov.value=e)}}),Object.defineProperty(Potree.PointCloudMaterial.prototype,"screenWidth",{get:function(){return this.uniforms.screenWidth.value},set:function(e){this.uniforms.screenWidth.value!==e&&(this.uniforms.screenWidth.value=e)}}),Object.defineProperty(Potree.PointCloudMaterial.prototype,"screenHeight",{get:function(){return this.uniforms.screenHeight.value},set:function(e){this.uniforms.screenHeight.value!==e&&(this.uniforms.screenHeight.value=e)}}),Object.defineProperty(Potree.PointCloudMaterial.prototype,"near",{get:function(){return this.uniforms.near.value},set:function(e){this.uniforms.near.value!==e&&(this.uniforms.near.value=e)}}),Object.defineProperty(Potree.PointCloudMaterial.prototype,"far",{get:function(){return this.uniforms.far.value},set:function(e){this.uniforms.far.value!==e&&(this.uniforms.far.value=e)}}),Object.defineProperty(Potree.PointCloudMaterial.prototype,"opacity",{get:function(){return this.uniforms.opacity.value},set:function(e){this.uniforms.opacity.value!==e&&(this.uniforms.opacity.value=e,this.updateShaderSource())}}),Object.defineProperty(Potree.PointCloudMaterial.prototype,"octreeLevels",{get:function(){return this._octreeLevels},set:function(e){this._octreeLevels!==e&&(this._octreeLevels=e,this.updateShaderSource())}}),Object.defineProperty(Potree.PointCloudMaterial.prototype,"pointColorType",{get:function(){return this._pointColorType},set:function(e){this._pointColorType!==e&&(this._pointColorType=e,this.updateShaderSource())}}),Object.defineProperty(Potree.PointCloudMaterial.prototype,"pointSizeType",{get:function(){return this._pointSizeType},set:function(e){this._pointSizeType!==e&&(this._pointSizeType=e,this.updateShaderSource())}}),Object.defineProperty(Potree.PointCloudMaterial.prototype,"interpolate",{get:function(){return this._interpolate},set:function(e){this._interpolate!==e&&(this._interpolate=e,this.updateShaderSource())}}),Object.defineProperty(Potree.PointCloudMaterial.prototype,"color",{get:function(){return this.uniforms.uColor.value},set:function(e){this.uniforms.uColor.value!==e&&(this.uniforms.uColor.value.copy(e),this.updateShaderSource())}}),Object.defineProperty(Potree.PointCloudMaterial.prototype,"pointShape",{get:function(){return this._pointShape},set:function(e){this._pointShape!==e&&(this._pointShape=e,this.updateShaderSource())}}),Object.defineProperty(Potree.PointCloudMaterial.prototype,"size",{get:function(){return this.uniforms.size.value},set:function(e){this.uniforms.size.value=e}}),Object.defineProperty(Potree.PointCloudMaterial.prototype,"minSize",{get:function(){return this.uniforms.minSize.value},set:function(e){this.uniforms.minSize.value=e}}),Object.defineProperty(Potree.PointCloudMaterial.prototype,"heightMin",{get:function(){return this.uniforms.heightMin.value},set:function(e){this.uniforms.heightMin.value=e}}),Object.defineProperty(Potree.PointCloudMaterial.prototype,"heightMax",{get:function(){return this.uniforms.heightMax.value},set:function(e){this.uniforms.heightMax.value=e}}),Object.defineProperty(Potree.PointCloudMaterial.prototype,"intensityMin",{get:function(){return this.uniforms.intensityMin.value},set:function(e){this.uniforms.intensityMin.value=e}}),Object.defineProperty(Potree.PointCloudMaterial.prototype,"intensityMax",{get:function(){return this.uniforms.intensityMax.value},set:function(e){this.uniforms.intensityMax.value=e}}),Object.defineProperty(Potree.PointCloudMaterial.prototype,"pcIndex",{get:function(){return this.uniforms.pcIndex.value},set:function(e){this.uniforms.pcIndex.value=e}}),Potree.PointCloudMaterial.generateGradient=function(){var e=64;canvas=document.createElement("canvas"),canvas.width=e,canvas.height=e;var t=canvas.getContext("2d");t.rect(0,0,e,e);var o=t.createLinearGradient(0,0,e,e);o.addColorStop(0,"#4700b6"),o.addColorStop(1/6,"blue"),o.addColorStop(2/6,"aqua"),o.addColorStop(.5,"green"),o.addColorStop(4/6,"yellow"),o.addColorStop(5/6,"orange"),o.addColorStop(1,"red"),t.fillStyle=o,t.fill();var i=new THREE.Texture(canvas);return i.needsUpdate=!0,textureImage=i.image,i},Potree.PointCloudMaterial.vs_points=["precision mediump float;                                                             ","precision mediump int;                                                               ","                                                                                   ","attribute vec3 position;                                                           ","attribute vec3 color;                                                              ","attribute float intensity;                                                         ","attribute float classification;                                                         ","attribute float returnNumber;                                                         ","attribute float pointSourceID;                                                         ","attribute vec4 indices;                                                            ","                                                                                   ","uniform mat4 modelMatrix;                                                          ","uniform mat4 modelViewMatrix;                                                      ","uniform mat4 projectionMatrix;                                                     ","uniform mat4 viewMatrix;                                                           ","uniform mat3 normalMatrix;                                                         ","uniform vec3 cameraPosition;                                                       ","uniform float screenWidth;                                                                                   ","uniform float screenHeight;                                                                                   ","uniform float fov;                                                                                   ","uniform float spacing;                                                                                   ","uniform float near;                                                                                   ","uniform float far;                                                                                   ","                                                                                   ","                                                                                   ","uniform float heightMin;                                                           ","uniform float heightMax;                                                           ","uniform float intensityMin;                                                        ","uniform float intensityMax;                                                        ","uniform float size;                                                                ","uniform float minSize;                                                             ","uniform float nodeSize;                                                            ","uniform vec3 uColor;                                                               ","                                                                                   ","uniform sampler2D visibleNodes;                                                    ","uniform sampler2D gradient;                                                        ","                                                                                   ","                                                                                   ","varying vec3 vColor;                                                               ","                                                                                   ","                                                                                   ","#if defined(adaptive_point_size) || defined(color_type_octree_depth)               ","/**                                                                                "," * number of 1-bits up to inclusive index position                                 "," * number is treated as if it were an integer in the range 0-255                   "," *                                                                                 "," */                                                                                ","float numberOfOnes(float number, float index){                                     ","	float tmp = mod(number, pow(2.0, index + 1.0));                                  ","	float numOnes = 0.0;                                                             ","	for(float i = 0.0; i < 8.0; i++){                                                ","		if(mod(tmp, 2.0) != 0.0){                                                    ","			numOnes++;                                                               ","		}                                                                            ","		tmp = floor(tmp / 2.0);                                                      ","	}                                                                                ","	return numOnes;                                                                  ","}                                                                                  ","                                                                                   ","                                                                                   ","/**                                                                                "," * checks whether the bit at index is 1                                            "," * number is treated as if it were an integer in the range 0-255                   "," *                                                                                 "," */                                                                                ","bool isBitSet(float number, float index){                                          ","	return mod(floor(number / pow(2.0, index)), 2.0) != 0.0;                         ","}                                                                                  ","                                                                                   ","                                                                                   ","/**                                                                                "," * find the octree depth at the point position                                     "," */                                                                                ","float getOctreeDepth(){                                                            ","	vec3 offset = vec3(0.0, 0.0, 0.0);                                               ","	float iOffset = 0.0;                                                             ","	float depth = 0.0;                                                               ","	for(float i = 0.0; i <= octreeLevels + 1.0; i++){                                ","		                                                                             ","		float nodeSizeAtLevel = nodeSize / pow(2.0, i);                              ","		vec3 index3d = (position - offset) / nodeSizeAtLevel;                        ","		index3d = floor(index3d + 0.5);                                              ","		float index = 4.0*index3d.x + 2.0*index3d.y + index3d.z;                     ","		                                                                             ","		vec4 value = texture2D(visibleNodes, vec2(iOffset / 2048.0, 0.0));           ","		float mask = value.r * 255.0;                                                ","		if(isBitSet(mask, index)){                                                   ","			// there are more visible child nodes at this position                   ","			iOffset = iOffset + value.g * 255.0 + numberOfOnes(mask, index - 1.0);   ","			depth++;                                                                 ","		}else{                                                                       ","			// no more visible child nodes at this position                          ","			return depth;                                                            ","		}                                                                            ","		offset = offset + (vec3(1.0, 1.0, 1.0) * nodeSizeAtLevel * 0.5) * index3d;   ","	}                                                                                ","		                                                                             ","	return depth;                                                                    ","}                                                                                  ","                                                                                   ","#endif                                                                             ","                                                                                   ","vec3 classificationColor(float classification){                                                                                   ","	vec3 color = vec3(0.0, 0.0, 0.0);                                                                                   ","  float c = mod(classification, 16.0);                                                                                   ","	if(c == 0.0){ ","	   color = vec3(0.5, 0.5, 0.5); ","	}else if(c == 1.0){ ","	   color = vec3(0.5, 0.5, 0.5); ","	}else if(c == 2.0){ ","	   color = vec3(0.63, 0.32, 0.18); ","	}else if(c == 3.0){ ","	   color = vec3(0.0, 1.0, 0.0); ","	}else if(c == 4.0){ ","	   color = vec3(0.0, 0.8, 0.0); ","	}else if(c == 5.0){ ","	   color = vec3(0.0, 0.6, 0.0); ","	}else if(c == 6.0){ ","	   color = vec3(1.0, 0.66, 0.0); ","	}else if(c == 7.0){ ","	   color = vec3(1.0, 0, 1.0); ","	}else if(c == 8.0){ ","	   color = vec3(1.0, 0, 0.0); ","	}else if(c == 9.0){ ","	   color = vec3(0.0, 0.0, 1.0); ","	}else if(c == 12.0){ ","	   color = vec3(1.0, 1.0, 0.0); ","	}else{ ","	   color = vec3(0.3, 0.6, 0.6); ","	} ","	                                                                                   ","	return color;                                                                                   ","}                                                                                   ","                                                                                   ","void main() {                                                                      ","                                                                                   ","	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );                       ","	gl_Position = projectionMatrix * mvPosition;                                     ","                                                                                   ","                                                                                   ","  // COLOR TYPES                                                                   ","                                                                                   ","  #ifdef color_type_rgb                                                            ","		vColor = color;                                                              ","  #elif defined color_type_height                                                  ","      vec4 world = modelMatrix * vec4( position, 1.0 );                            ","      float w = (world.y - heightMin) / (heightMax-heightMin);                     ","                                                                                   ","  	vColor = texture2D(gradient, vec2(w,1.0-w)).rgb;                             ","  #elif defined color_type_depth                                                   ","  	vColor = vec3(1.0, 1.0, 1.0) * gl_Position.w * 0.0001;                       ","  #elif defined color_type_intensity                                               ","      float w = (intensity - intensityMin) / intensityMax;                         ","		vColor = vec3(w, w, w);                                                      ","  	//vColor = texture2D(gradient, vec2(w,1.0-w)).rgb;                           ","  #elif defined color_type_intensity_gradient                                      ","      float w = (intensity - intensityMin) / intensityMax;                         ","  	vColor = texture2D(gradient, vec2(w,1.0-w)).rgb;                             ","  #elif defined color_type_color                                                   ","  	vColor = uColor;                                                             ","  #elif defined color_type_octree_depth                                            ","  	float depth = getOctreeDepth();                                              ","      float w = depth / 10.0;                                                      ","  	vColor = texture2D(gradient, vec2(w,1.0-w)).rgb;                             ","  #elif defined color_type_point_index                                             ","  	vColor = indices.rgb;                                                        ","  #elif defined color_type_classification                                             ","  	vColor = classificationColor(classification);                               ","  #elif defined color_type_return_number                                             ","      float w = (returnNumber - 1.0) / 4.0 + 0.1;                                                      ","  	vColor = texture2D(gradient, vec2(w, 1.0 - w)).rgb;                             ","  #elif defined color_type_source                                             ","      float w = mod(pointSourceID, 10.0) / 10.0;                                                                             ","  	vColor = texture2D(gradient, vec2(w,1.0 - w)).rgb;                               ","  #endif                                                                           ","                                                                                   ","                                                                                   ","  //                                                                               ","  // POINT SIZE TYPES                                                              ","  //                                                                               ","  float r = spacing * 1.5;                                                                                 ","  #if defined fixed_point_size                                                     ","  	gl_PointSize = size;                                                         ","  #elif defined attenuated_point_size                                              ","		//gl_PointSize = size * ( 300.0 / length( mvPosition.xyz ) );                  ","      gl_PointSize = (1.0 / tan(fov/2.0)) * size / (-mvPosition.z);                                                                                 ","      gl_PointSize = gl_PointSize * screenHeight / 2.0;                                                                              ","  #elif defined adaptive_point_size                                                ","      //gl_PointSize = size * ( 300.0 / length( mvPosition.xyz ) );                  ","      //gl_PointSize = (1.0 / tan(fov/2.0)) * r / sqrt( max(0.0, mvPosition.z * mvPosition.z - r * r));                                                                                 ","      gl_PointSize = (1.0 / tan(fov/2.0)) * r / (-mvPosition.z);                                                                                 ","      gl_PointSize = size * gl_PointSize * screenHeight / 2.0;                                                                              ","  	gl_PointSize = gl_PointSize / pow(1.9, getOctreeDepth());                    ","  #endif                                                                           ","                                                                                    ","	gl_PointSize = max(minSize, gl_PointSize);                                       ","	gl_PointSize = min(50.0, gl_PointSize);                                          ","                                                                                   ","}                                                                                  "],Potree.PointCloudMaterial.fs_points_rgb=["#if defined use_interpolation                                                      ","	#extension GL_EXT_frag_depth : enable                                            ","#endif                                                                             ","                                                                                   ","precision highp float;                                                             ","precision highp int;                                                               ","                                                                                   ","uniform float opacity;                                                             ","uniform float pcIndex;                                                             ","                                                                                   ","varying vec3 vColor;                                                               ","                                                                                   ","                                                                                   ","void main() {                                                                      ","	                                                                                 ","	#if defined(circle_point_shape) || defined(use_interpolation)                    ","		float a = pow(2.0*(gl_PointCoord.x - 0.5), 2.0);                             ","		float b = pow(2.0*(gl_PointCoord.y - 0.5), 2.0);                             ","		float c = 1.0 - (a + b);                                                     ","  	                                                                             ","		if(c < 0.0){                                                                 ","			discard;                                                                 ","		}                                                                            ","	#endif                                                                           ","	                                                                                 ","	#if defined use_interpolation                                                    ","		gl_FragDepthEXT = gl_FragCoord.z + 0.002*(1.0-pow(c, 1.0)) * gl_FragCoord.w; ","	#endif                                                                           ","	                                                                                 ","	                                                                                 ","	#if defined color_type_point_index                                               ","		gl_FragColor = vec4(vColor, pcIndex / 255.0);                                ","	#else                                                                            ","		gl_FragColor = vec4(vColor, opacity);                                        ","	#endif                                                                           ","	                                                                                 ","}                                                                                  "],THREE.FirstPersonControls=function(e,t){function o(e){l.enabled!==!1&&(e.preventDefault(),0===e.button?(b=P.ROTATE,d.set(e.clientX,e.clientY)):2===e.button&&(b=P.PAN,p.set(e.clientX,e.clientY)),l.domElement.addEventListener("mousemove",i,!1),l.domElement.addEventListener("mouseup",r,!1),l.dispatchEvent(R))
}function i(e){if(l.enabled!==!1){e.preventDefault();var t=l.domElement===document?l.domElement.body:l.domElement;b===P.ROTATE?(c.set(e.clientX,e.clientY),u.subVectors(c,d),l.rotateLeft(2*Math.PI*u.x/t.clientWidth*l.rotateSpeed),l.rotateUp(2*Math.PI*u.y/t.clientHeight*l.rotateSpeed),d.copy(c)):b===P.PAN&&(h.set(e.clientX,e.clientY),m.subVectors(h,p),m.multiplyScalar(5e-4).multiplyScalar(l.moveSpeed),l.pan(m.x,m.y),p.copy(h))}}function r(){l.enabled!==!1&&(l.domElement.removeEventListener("mousemove",i,!1),l.domElement.removeEventListener("mouseup",r,!1),l.dispatchEvent(w),b=P.NONE)}function n(e){if(l.enabled!==!1&&l.noZoom!==!0){e.preventDefault();var t=e.detail<0||e.wheelDelta>0?1:-1;l.moveSpeed+=.1*l.moveSpeed*t,l.moveSpeed=Math.max(.1,l.moveSpeed),l.dispatchEvent(R),l.dispatchEvent(w)}}function a(e){if(l.enabled!==!1)switch(e.keyCode){case l.keys.UP:l.moveForward=!0;break;case l.keys.BOTTOM:l.moveBackward=!0;break;case l.keys.LEFT:l.moveLeft=!0;break;case l.keys.RIGHT:l.moveRight=!0;break;case l.keys.W:l.moveForward=!0;break;case l.keys.S:l.moveBackward=!0;break;case l.keys.A:l.moveLeft=!0;break;case l.keys.D:l.moveRight=!0}}function s(e){switch(e.keyCode){case l.keys.W:l.moveForward=!1;break;case l.keys.S:l.moveBackward=!1;break;case l.keys.A:l.moveLeft=!1;break;case l.keys.D:l.moveRight=!1;break;case l.keys.UP:l.moveForward=!1;break;case l.keys.BOTTOM:l.moveBackward=!1;break;case l.keys.LEFT:l.moveLeft=!1;break;case l.keys.RIGHT:l.moveRight=!1}}this.object=e,this.domElement=void 0!==t?t:document,this.enabled=!0,this.rotateSpeed=1,this.moveSpeed=10,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40,A:"A".charCodeAt(0),S:"S".charCodeAt(0),D:"D".charCodeAt(0),W:"W".charCodeAt(0)};var l=this,d=new THREE.Vector2,c=new THREE.Vector2,u=new THREE.Vector2,p=new THREE.Vector2,h=new THREE.Vector2,m=new THREE.Vector2,f=new THREE.Vector3,v=(new THREE.Vector3,0),y=0,E=1,T=new THREE.Vector3,g=new THREE.Vector3,P={NONE:-1,ROTATE:0,SPEEDCHANGE:1,PAN:2},b=P.NONE;this.position0=this.object.position.clone();var x={type:"change"},R={type:"start"},w={type:"end"};this.rotateLeft=function(e){y-=e},this.rotateUp=function(e){v-=e},this.panLeft=function(e){var t=this.object.matrix.elements;f.set(t[0],t[1],t[2]),f.multiplyScalar(-e),T.add(f)},this.panUp=function(e){var t=this.object.matrix.elements;f.set(t[4],t[5],t[6]),f.multiplyScalar(e),T.add(f)},this.panForward=function(e){var t=this.object.matrix.elements;f.set(t[8],t[9],t[10]),f.multiplyScalar(e),T.add(f)},this.pan=function(e,t){var o=l.domElement===document?l.domElement.body:l.domElement;if(void 0!==l.object.fov){var i=l.object.position,r=i.clone(),n=r.length();n*=Math.tan(l.object.fov/2*Math.PI/180),l.panLeft(2*e*n/o.clientHeight),l.panUp(2*t*n/o.clientHeight)}else void 0!==l.object.top?(l.panLeft(e*(l.object.right-l.object.left)/o.clientWidth),l.panUp(t*(l.object.top-l.object.bottom)/o.clientHeight)):console.warn("WARNING: FirstPersonControls.js encountered an unknown camera type - pan disabled.")},this.update=function(e){this.object.rotation.order="ZYX";var t=this.object.position;if(void 0!==e&&(this.moveRight&&this.panLeft(-e*this.moveSpeed),this.moveLeft&&this.panLeft(e*this.moveSpeed),this.moveForward&&this.panForward(-e*this.moveSpeed),this.moveBackward&&this.panForward(e*this.moveSpeed)),!T.equals(new THREE.Vector3(0,0,0))){var o={type:"move",translation:T.clone()};this.dispatchEvent(o)}if(t.add(T),0!==y||0!==v){var o={type:"rotate",thetaDelta:y,phiDelta:v};this.dispatchEvent(o)}this.object.updateMatrix();var i=(new THREE.Matrix4).makeRotationY(y),r=(new THREE.Matrix4).multiplyMatrices(i,this.object.matrix);this.object.quaternion.setFromRotationMatrix(r),this.object.rotation.x+=v,y=0,v=0,E=1,T.set(0,0,0),g.distanceTo(this.object.position)>0&&(this.dispatchEvent(x),g.copy(this.object.position))},this.reset=function(){b=P.NONE,this.object.position.copy(this.position0)},this.domElement.addEventListener("contextmenu",function(e){e.preventDefault()},!1),this.domElement.addEventListener("mousedown",o,!1),this.domElement.addEventListener("mousewheel",n,!1),this.domElement.addEventListener("DOMMouseScroll",n,!1),window.addEventListener("keydown",a,!1),window.addEventListener("keyup",s,!1)},THREE.FirstPersonControls.prototype=Object.create(THREE.EventDispatcher.prototype),LRU.prototype.size=function(){return this.elements},LRU.prototype.contains=function(e){return null==this.items[e.id]},LRU.prototype.touch=function(e){var t;null==this.items[e.id]?(t=new LRUItem(e),t.previous=this.last,this.last=t,null!==t.previous&&(t.previous.next=t),this.items[e.id]=t,this.elements++,null===this.first&&(this.first=t),this.numPoints+=e.numPoints):(t=this.items[e.id],null===t.previous?null!==t.next&&(this.first=t.next,this.first.previous=null,t.previous=this.last,t.next=null,this.last=t,t.previous.next=t):null===t.next||(t.previous.next=t.next,t.next.previous=t.previous,t.previous=this.last,t.next=null,this.last=t,t.previous.next=t))},LRU.prototype.remove=function(){if(null===this.first)return null;var e=this.first;return null!==e.next?(this.first=e.next,this.first.previous=null):(this.first=null,this.last=null),delete this.items[e.node.id],this.elements--,this.numPoints-=e.node.numPoints,e.node},LRU.prototype.getLRUItem=function(){if(null===this.first)return null;var e=this.first;return e.node},LRU.prototype.toString=function(){for(var e="{ ",t=this.first;null!==t;)e+=t.node.id,null!==t.next&&(e+=", "),t=t.next;return e+="}",e+="("+this.size()+")"},Potree.PointCloudOctreeProxyNode=function(e){THREE.Object3D.call(this),this.geometryNode=e,this.boundingBox=e.boundingBox,this.boundingSphere=this.boundingBox.getBoundingSphere(),this.name=e.name,this.level=e.level,this.numPoints=e.numPoints},Potree.PointCloudOctreeProxyNode.prototype=Object.create(THREE.Object3D.prototype),Potree.ProfileRequest=function(e,t,o,i,r){this.start=e,this.end=t,this.width=o,this.depth=i,this.callback=r,this.loadQueue=[];var n=((new THREE.Vector3).addVectors(t,e).multiplyScalar(.5),(new THREE.Vector3).subVectors(t,e).length(),(new THREE.Vector3).subVectors(t,e).normalize()),a=new THREE.Vector3(0,1,0),s=(new THREE.Vector3).crossVectors(n,a).normalize(),l=s;this.plane=(new THREE.Plane).setFromNormalAndCoplanarPoint(l,e)},Potree.PointCloudOctree=function(e,t){THREE.Object3D.call(this),Potree.PointCloudOctree.lru=Potree.PointCloudOctree.lru||new LRU,this.pcoGeometry=e,this.boundingBox=this.pcoGeometry.root.boundingBox,this.boundingSphere=this.boundingBox.getBoundingSphere(),this.material=t||new Potree.PointCloudMaterial,this.visiblePointsTarget=2e6,this.level=0,this.position.sub(e.offset),this.updateMatrix(),this.LODDistance=20,this.LODFalloff=1.3,this.LOD=4,this.showBoundingBox=!1,this.loadQueue=[],this.visibleBounds=new THREE.Box3,this.profileRequests=[],this.visibleNodes=[],this.visibleGeometry=[],this.pickTarget,this.pickMaterial,this.maxLevel=0;var o=new Potree.PointCloudOctreeProxyNode(this.pcoGeometry.root);this.add(o)},Potree.PointCloudOctree.prototype=Object.create(THREE.Object3D.prototype),Potree.PointCloudOctree.prototype.update=function(e,t){this.updateMatrixWorld(!0),this.visibleGeometry=this.getVisibleGeometry(e);for(var o=[],i=0;i<this.visibleGeometry.length;i++)o.push(this.visibleGeometry[i].node.name);for(var i=0;i<this.profileRequests.length;i++){var r=this.profileRequests[i];r.loadQueue=[]}this.loadQueue=[],this.visibleNodes=[],this.numVisibleNodes=0,this.numVisiblePoints=0,this.material.fov=e.fov*(Math.PI/180),this.material.screenWidth=t.domElement.clientWidth,this.material.screenHeight=t.domElement.clientHeight,this.material.spacing=pointcloud.pcoGeometry.spacing,this.material.near=e.near,this.material.far=e.far,this.hideDescendants(this.children[0]);var n=[];for(n.push({node:this.children[0],weight:1});n.length>0;){{var a=n.shift(),s=a.node;a.weight}if(s.visible=!0,s.matrixWorld.multiplyMatrices(s.parent.matrixWorld,s.matrix),s instanceof Potree.PointCloudOctreeProxyNode){var l=s.geometryNode;l.loaded===!0?this.replaceProxy(s):this.loadQueue.push(a)}else if(s instanceof THREE.PointCloud){this.numVisibleNodes++,this.numVisiblePoints+=s.numPoints,s.material=this.material,this.visibleNodes.push(a),s.level&&(this.maxLevel=Math.max(s.level,this.maxLevel));for(var i=0;i<s.children.length;i++){var d=s.children[i],c=o.indexOf(d.name)>=0;if(c)for(var u=0;u<this.visibleGeometry.length;u++)this.visibleGeometry[u].node.name===d.name&&n.push({node:d,weight:this.visibleGeometry[u].weight})}}}this.material.octreeLevels=this.maxLevel;for(var i=0;i<this.profileRequests.length;i++){var r=this.profileRequests[i],p=r.plane,h=(r.start,r.end,r.depth),n=[];for(n.push(this);n.length>0;){var m=n.shift();if(m instanceof Potree.PointCloudOctreeProxyNode){var f=Potree.utils.computeTransformedBoundingBox(m.boundingBox,m.matrixWorld),v=f.getBoundingSphere();Math.abs(p.distanceToPoint(v.center))<v.radius&&r.loadQueue.push(m)}if(m.level<h)for(var i=0;i<m.children.length;i++){var d=m.children[i];(d instanceof Potree.PointCloudOctreeProxyNode||d instanceof THREE.PointCloud)&&n.push(m.children[i])}}}for(var y=[],i=0;i<this.visibleNodes.length;i++){for(var a=this.visibleNodes[i],s=a.node,E=!0,u=0;u<s.children.length;u++){var d=s.children[u];d instanceof THREE.PointCloud&&(E=E&&!d.visible)}E&&y.push(s)}this.visibleBounds.min=new THREE.Vector3(1/0,1/0,1/0),this.visibleBounds.max=new THREE.Vector3(-1/0,-1/0,-1/0);for(var i=0;i<y.length;i++){var s=y[i];this.visibleBounds.expandByPoint(s.boundingBox.min),this.visibleBounds.expandByPoint(s.boundingBox.max)}for(var T=[],i=0;i<this.profileRequests.length;i++){var g=this.profileRequests[i];if(g.loadQueue.length>0){var m=g.loadQueue[0],l=m.geometryNode;if(l.loaded===!0&&void 0!==m.parent){var s=this.replaceProxy(m);s.updateMatrixWorld(),s.matrixWorld.multiplyMatrices(s.parent.matrixWorld,s.matrix)}else m.geometryNode.load()}else{var P=this.getProfile(g.start,g.end,g.width,g.depth);g.callback({type:"finished",points:P}),T.push(g)}}for(var i=0;i<T.length;i++){var b=this.profileRequests.indexOf(T[i]);b>-1&&this.profileRequests.splice(b,1)}if(this.loadQueue.length>0){this.loadQueue.length>=2&&this.loadQueue.sort(function(e,t){return t.weight-e.weight});for(var i=0;i<Math.min(5,this.loadQueue.length);i++)this.loadQueue[i].node.geometryNode.load()}this.hideDescendants(this.children[0]);for(var i=0;i<this.visibleNodes.length;i++)this.visibleNodes[i].node.visible=!0;this.material.pointSizeType&&(this.material.pointSizeType===Potree.PointSizeType.ADAPTIVE||this.material.pointColorType===Potree.PointColorType.OCTREE_DEPTH)&&this.updateVisibilityTexture()},Potree.PointCloudOctree.prototype.getVisibleGeometry=function(e){var t=[],o=this.pcoGeometry;e.updateMatrixWorld();var i=new THREE.Frustum,r=e.matrixWorldInverse,n=this.matrixWorld,a=e.projectionMatrix,s=(new THREE.Matrix4).multiply(a).multiply(r).multiply(n);i.setFromMatrix(s);var l=e.matrixWorld,d=(new THREE.Matrix4).getInverse(n),c=(new THREE.Matrix4).multiply(d).multiply(l),u=(new THREE.Vector3).setFromMatrixPosition(c),p=o.root,h=[],m=0,f=p.boundingBox.getBoundingSphere(),v=f.center.distanceTo(u),y=1/Math.max(.1,f.center.distanceTo(u)-f.radius);h.push({node:p,weight:y});for(var E=0;h.length>0;){E++;var T=h.shift(),g=T.node,P=g.boundingBox,f=g.boundingSphere,b=i.intersectsBox(P),x=b;if(x){if(m+g.numPoints>this.visiblePointsTarget)break;m+=g.numPoints,t.push(T);for(var R in g.children){var w=g.children[R],f=w.boundingSphere,v=f.center.distanceTo(u),C=f.radius,y=f.radius/v,A=e.fov/2*Math.PI/180,S=1/Math.tan(A)*C/Math.sqrt(v*v-C*C);if(!(.1>S))if(y=S,0>v-C&&(y=Number.MAX_VALUE),0===h.length)h.push({node:w,weight:y});else{for(var H=0,M=0;M<h.length;M++){if(y>h[M].weight){var H=M;break}if(M==h.length-1){H=h.length;break}}h.splice(H,0,{node:w,weight:y})}}}}return t},Potree.PointCloudOctree.prototype.updateVisibilityTexture=function(){if(this.material){for(var e=this.material.visibleNodesTexture,t=e.image.data,o=[],i=0;i<this.visibleNodes.length;i++)o.push(this.visibleNodes[i].node);var r=function(e,t){var o=e.name,i=t.name;return o.length!=i.length?o.length-i.length:i>o?-1:o>i?1:0};o.sort(r);for(var i=0;i<o.length;i++){for(var n=o[i],a=[],s=0;s<n.children.length;s++){var l=n.children[s];l instanceof THREE.PointCloud&&l.visible&&a.push(l)}a.sort(function(e,t){return e.name<t.name?-1:e.name>t.name?1:0}),t[3*i+0]=0,t[3*i+1]=0,t[3*i+2]=0;for(var s=0;s<a.length;s++){var l=a[s],d=parseInt(l.name.substr(-1));if(t[3*i+0]+=Math.pow(2,d),0===s){var c=o.indexOf(l);t[3*i+1]=c-i}}}this.material.uniforms.nodeSize.value=this.boundingBox.size().x,e.needsUpdate=!0}},Potree.PointCloudOctree.prototype.nodesOnRay=function(e,t){for(var o=[],i=t.clone(),r=0;r<e.length;r++){var n=e[r].node,a=((new THREE.Matrix4).getInverse(n.matrixWorld),n.boundingSphere.clone().applyMatrix4(n.matrixWorld));i.isIntersectionSphere(a)&&o.push(e[r])}return o},Potree.PointCloudOctree.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate===!0&&this.updateMatrix(),(this.matrixWorldNeedsUpdate===!0||e===!0)&&(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0)},Potree.PointCloudOctree.prototype.replaceProxy=function(e){var t=e.geometryNode;if(t.loaded===!0){var o=t.geometry,i=new THREE.PointCloud(o,this.material);i.name=e.name,i.level=e.level,i.numPoints=e.numPoints,i.boundingBox=o.boundingBox,i.boundingSphere=i.boundingBox.getBoundingSphere(),i.pcoGeometry=t;var r=e.parent;r.remove(e),r.add(i),i.matrixWorld.multiplyMatrices(i.parent.matrixWorld,i.matrix);for(var n=0;8>n;n++)if(void 0!==t.children[n]){var a=t.children[n],s=new Potree.PointCloudOctreeProxyNode(a);i.add(s)}return i}},Potree.PointCloudOctree.prototype.hideDescendants=function(e){for(var t=[],o=0;o<e.children.length;o++){var i=e.children[o];i.visible&&t.push(i)}for(;t.length>0;){var e=t.shift();e.visible=!1;for(var o=0;o<e.children.length;o++){var i=e.children[o];i.visible&&t.push(i)}}},Potree.PointCloudOctree.prototype.moveToOrigin=function(){this.position.set(0,0,0),this.updateMatrixWorld(!0);var e=this.boundingBox,t=this.matrixWorld,o=Potree.utils.computeTransformedBoundingBox(e,t);this.position.set(0,0,0).sub(o.center())},Potree.PointCloudOctree.prototype.moveToGroundPlane=function(){this.updateMatrixWorld(!0);var e=this.boundingBox,t=this.matrixWorld,o=Potree.utils.computeTransformedBoundingBox(e,t);this.position.y+=-o.min.y},Potree.PointCloudOctree.prototype.getBoundingBoxWorld=function(){this.updateMatrixWorld(!0);var e=this.boundingBox,t=this.matrixWorld,o=Potree.utils.computeTransformedBoundingBox(e,t);return o},Potree.PointCloudOctree.prototype.getProfile=function(e,t,o,i,r){if(void 0===r){var n=[];n.push(this);for(var a=(new THREE.Vector3).addVectors(t,e).multiplyScalar(.5),s=(new THREE.Vector3).subVectors(t,e).length(),l=(new THREE.Vector3).subVectors(t,e).normalize(),d=new THREE.Vector3(0,1,0),c=(new THREE.Vector3).crossVectors(l,d).normalize(),u=c,p=(new THREE.Plane).setFromNormalAndCoplanarPoint(u,e),h=(new THREE.Plane).setFromNormalAndCoplanarPoint(l,a),m=[];n.length>0;){var f=n.shift(),v=0;if(f instanceof THREE.PointCloud)for(var y=f.geometry,E=y.attributes.position,T=E.array,g=E.length/E.itemSize,P=0;g>P;P++){var b=new THREE.Vector3(T[3*P],T[3*P+1],T[3*P+2]);b.applyMatrix4(this.matrixWorld);var x=Math.abs(p.distanceToPoint(b)),R=Math.abs(h.distanceToPoint(b));o/2>x&&s/2>R&&(m.push(b),v++)}if(f==this||f.level<i)for(var P=0;P<f.children.length;P++){var w=f.children[P];if(w instanceof THREE.PointCloud){var C=w.boundingSphere.clone().applyMatrix4(w.matrixWorld);p.distanceToSphere(C)<C.radius&&n.push(w)}}}return m}this.profileRequests.push(new Potree.ProfileRequest(e,t,o,i,r))},Potree.PointCloudOctree.disposeLeastRecentlyUsed=function(e){var t=0;do{var o=this.lru.first.node,i=o.parent,r=(o.geometry,o.pcoGeometry),n=new Potree.PointCloudOctreeProxyNode(r),a=Potree.PointCloudOctree.disposeNode(o);if(t+=a.freed,i.add(n),0==a.numDeletedNodes)break}while(e>t)},Potree.PointCloudOctree.disposeNode=function(e){var t=0,o=0,i=[];e.traverse(function(e){i.push(e)});for(var r=0;r<i.length;r++){var n=i[r];n instanceof THREE.PointCloud&&(t+=n.pcoGeometry.numPoints,n.pcoGeometry.dispose(),n.geometry.dispose(),Potree.PointCloudOctree.lru.remove(n),o++)}return Potree.PointCloudOctree.lru.remove(e),e.parent.remove(e),{freed:t,numDeletedNodes:o}},Potree.PointCloudOctree.prototype.getVisibleExtent=function(){return this.visibleBounds.applyMatrix4(this.matrixWorld)};var point=Potree.PointCloudOctree.prototype.pick=function(e,t,o,i){var i=i||{},r=i.accuracy||.5,n=this.nodesOnRay(this.visibleNodes,o);if(0===n.length)return null;var a=Math.ceil(e.domElement.clientWidth*r),s=Math.ceil(e.domElement.clientHeight*r);this.pickTarget||(this.pickTarget=new THREE.WebGLRenderTarget(1,1,{minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat})),this.pickMaterial||(this.pickMaterial=new Potree.PointCloudMaterial,this.pickMaterial.pointColorType=Potree.PointColorType.POINT_INDEX,this.pickMaterial.pointSizeType=Potree.PointSizeType.FIXED,this.pickMaterial.size=5*r),this.pickTarget.setSize(a,s);var l=e.context,d=this.pickMaterial;e.setRenderTarget(this.pickTarget),e.setDepthTest(d.depthTest),e.setDepthWrite(d.depthWrite),e.setBlending(THREE.NoBlending),e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil);for(var c=0;c<n.length;c++){var u=n[c].node,p=u.geometry;if(p.attributes.indices.buffer){if(d.pcIndex=c,d.program){var h=d.program.program;l.useProgram(h);var m=l.getAttribLocation(h,"indices"),f=4;l.bindBuffer(l.ARRAY_BUFFER,p.attributes.indices.buffer),l.enableVertexAttribArray(m),l.vertexAttribPointer(m,f,l.UNSIGNED_BYTE,!0,0,0),l.uniform1f(d.program.uniforms.pcIndex,d.pcIndex)}e.renderBufferDirect(t,[],null,d,p,u)}}var v=(new THREE.Vector3).addVectors(t.position,o.direction).project(t);v.addScalar(1).multiplyScalar(.5);var y=new ArrayBuffer(4),E=new Uint8Array(y),T=new Uint32Array(y);e.context.readPixels(v.x*a,v.y*s,1,1,e.context.RGBA,e.context.UNSIGNED_BYTE,E);var g=E[3];E[3]=0;var P=T[0],b=n[g].node,x=b.geometry.attributes.position.array,R=x[3*P+0],w=x[3*P+1],C=x[3*P+2],A=new THREE.Vector3(R,w,C);return A.applyMatrix4(this.matrixWorld),0===P&&0===g?null:{position:A}},nodesLoadTimes={};Potree.PointCloudOctreeGeometry=function(){Potree.PointCloudOctree.lru=Potree.PointCloudOctree.lru||new LRU,this.url=null,this.octreeDir=null,this.spacing=0,this.boundingBox=null,this.root=null,this.numNodesLoading=0,this.nodes=null,this.pointAttributes=null},Potree.PointCloudOctreeGeometryNode=function(e,t,o){this.name=e,this.index=parseInt(e.charAt(e.length-1)),this.pcoGeometry=t,this.boundingBox=o,this.boundingSphere=o.getBoundingSphere(),this.children={},this.numPoints=0,this.level=null},Potree.PointCloudOctreeGeometryNode.prototype.addChild=function(e){this.children[e.index]=e,e.parent=this},Potree.PointCloudOctreeGeometryNode.prototype.load=function(){this.loading===!0||this.pcoGeometry.numNodesLoading>1||(this.loading=!0,Potree.PointCloudOctree.lru.numPoints+this.numPoints>=Potree.pointLoadLimit&&Potree.PointCloudOctree.disposeLeastRecentlyUsed(this.numPoints),this.pcoGeometry.numNodesLoading++,this.pcoGeometry.loader.load(this))},Potree.BinaryNodeLoader=function(){},Potree.BinaryNodeLoader.load=function(e,t,o){var i=e.pcoGeometry.octreeDir+"/"+e.name;void 0!==t&&t.length>0&&(i+="."+t);var r=new XMLHttpRequest;r.open("GET",i,!0),r.responseType="arraybuffer",r.overrideMimeType("text/plain; charset=x-user-defined"),r.onreadystatechange=function(){if(4===r.readyState)if(200===r.status||0===r.status){var t=r.response;o(e,t)}else console.log("Failed to load file! HTTP status: "+r.status+", file: "+i)};try{r.send(null)}catch(n){console.log("fehler beim laden der punktwolke: "+n)}},Potree.PointCloudOctreeGeometryNode.prototype.dispose=function(){delete this.geometry,this.loaded=!1},Potree.utils=function(){},Potree.utils.pathExists=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),200!==t.status?!1:!0},Potree.utils.computeTransformedBoundingBox=function(e,t){var o=[new THREE.Vector3(e.min.x,e.min.y,e.min.z).applyMatrix4(t),new THREE.Vector3(e.min.x,e.min.y,e.min.z).applyMatrix4(t),new THREE.Vector3(e.max.x,e.min.y,e.min.z).applyMatrix4(t),new THREE.Vector3(e.min.x,e.max.y,e.min.z).applyMatrix4(t),new THREE.Vector3(e.min.x,e.min.y,e.max.z).applyMatrix4(t),new THREE.Vector3(e.min.x,e.max.y,e.max.z).applyMatrix4(t),new THREE.Vector3(e.max.x,e.max.y,e.min.z).applyMatrix4(t),new THREE.Vector3(e.max.x,e.min.y,e.max.z).applyMatrix4(t),new THREE.Vector3(e.max.x,e.max.y,e.max.z).applyMatrix4(t)],i=new THREE.Box3;return i.setFromPoints(o),i},Potree.utils.addCommas=function(e){e+="",x=e.split("."),x1=x[0],x2=x.length>1?"."+x[1]:"";for(var t=/(\d+)(\d{3})/;t.test(x1);)x1=x1.replace(t,"$1,$2");return x1+x2},Potree.utils.createWorker=function(e){var t=new Blob([e],{type:"application/javascript"}),o=new Worker(URL.createObjectURL(t));return o},Potree.utils.loadSkybox=function(e){var t=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,1,1e5),o=new THREE.Scene,i=".jpg",r=[e+"px"+i,e+"nx"+i,e+"py"+i,e+"ny"+i,e+"pz"+i,e+"nz"+i],n=THREE.ImageUtils.loadTextureCube(r,new THREE.CubeRefractionMapping),a=new THREE.MeshBasicMaterial({color:16777215,envMap:n,refractionRatio:.95}),s=THREE.ShaderLib.cube;s.uniforms.tCube.value=n;var a=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:s.uniforms,depthWrite:!1,side:THREE.BackSide}),l=new THREE.Mesh(new THREE.BoxGeometry(100,100,100),a);return o.add(l),{camera:t,scene:o}},Potree.utils.createGrid=function(e,t,o,i){for(var r=new THREE.LineBasicMaterial({color:i||8947848}),n=new THREE.Geometry,a=0;t>=a;a++)n.vertices.push(new THREE.Vector3(-(o*e)/2,0,a*o-o*t/2)),n.vertices.push(new THREE.Vector3(+(o*e)/2,0,a*o-o*t/2));for(var a=0;e>=a;a++)n.vertices.push(new THREE.Vector3(a*o-o*e/2,0,-(o*t)/2)),n.vertices.push(new THREE.Vector3(a*o-o*e/2,0,+(o*t)/2));var s=new THREE.Line(n,r,THREE.LinePieces);return s.receiveShadow=!0,s},Potree.TextSprite=function(e){var t=new THREE.Texture,o=new THREE.SpriteMaterial({map:t,useScreenCoordinates:!1});THREE.Sprite.call(this,o),this.borderThickness=4,this.fontface="Arial",this.fontsize=28,this.borderColor={r:0,g:0,b:0,a:1},this.backgroundColor={r:255,g:255,b:255,a:1},this.text="",this.setText(e)},Potree.TextSprite.prototype=new THREE.Sprite,Potree.TextSprite.prototype.setText=function(e){this.text=e,this.update()},Potree.TextSprite.prototype.setBorderColor=function(e){this.borderColor=e,this.update()},Potree.TextSprite.prototype.setBackgroundColor=function(e){this.backgroundColor=e,this.update()},Potree.TextSprite.prototype.update=function(){var e=document.createElement("canvas"),t=e.getContext("2d");t.font="Bold "+this.fontsize+"px "+this.fontface;var o=t.measureText(this.text),i=o.width,r=i+2*this.borderThickness,n=1.4*this.fontsize+2*this.borderThickness,e=document.createElement("canvas"),t=e.getContext("2d");t.canvas.width=r,t.canvas.height=n,t.font="Bold "+this.fontsize+"px "+this.fontface,t.fillStyle="rgba("+this.backgroundColor.r+","+this.backgroundColor.g+","+this.backgroundColor.b+","+this.backgroundColor.a+")",t.strokeStyle="rgba("+this.borderColor.r+","+this.borderColor.g+","+this.borderColor.b+","+this.borderColor.a+")",t.lineWidth=this.borderThickness,this.roundRect(t,this.borderThickness/2,this.borderThickness/2,i+this.borderThickness,1.4*this.fontsize+this.borderThickness,6),t.strokeStyle="rgba(0, 0, 0, 1.0)",t.strokeText(this.text,this.borderThickness,this.fontsize+this.borderThickness),t.fillStyle="rgba(255, 255, 255, 1.0)",t.fillText(this.text,this.borderThickness,this.fontsize+this.borderThickness);var a=new THREE.Texture(e);a.needsUpdate=!0,this.material.map=a,this.scale.set(.01*r,.01*n,1)},Potree.TextSprite.prototype.roundRect=function(e,t,o,i,r,n){e.beginPath(),e.moveTo(t+n,o),e.lineTo(t+i-n,o),e.quadraticCurveTo(t+i,o,t+i,o+n),e.lineTo(t+i,o+r-n),e.quadraticCurveTo(t+i,o+r,t+i-n,o+r),e.lineTo(t+n,o+r),e.quadraticCurveTo(t,o+r,t,o+r-n),e.lineTo(t,o+n),e.quadraticCurveTo(t,o,t+n,o),e.closePath(),e.fill(),e.stroke()},Potree.Version=function(e){this.version=e;var t=-1===e.indexOf(".")?e.length:e.indexOf(".");this.versionMajor=e.substr(0,t),this.versionMinor=e.substr(t+1),0===this.versionMinor.length&&(this.versionMinor=0)},Potree.Version.prototype.newerThan=function(e){var t=new Potree.Version(e);return this.versionMajor>t.versionMajor?!0:this.versionMajor===t.versionMajor&&this.versionMinor>t.versionMinor?!0:!1},Potree.MeasuringTool=function(e,t,o){function i(){this.points=[],this.spheres=[],this.edges=[],this.sphereLabels=[],this.edgeLabels=[]}function r(){var e=new THREE.MeshLambertMaterial({shading:THREE.SmoothShading,color:16711680,ambient:11184810,depthTest:!1,depthWrite:!1});return e}function n(e){if(p.enabled){var t=u();if(t){var o=t.clone(),n=new THREE.Mesh(f,r());n.position.copy(t),p.sceneRoot.add(n),n.addEventListener("mousemove",v),n.addEventListener("mouseleave",y),n.addEventListener("mousedrag",E),n.addEventListener("drop",T);var a=new THREE.Mesh(f,r());a.position.copy(t),p.sceneRoot.add(a),a.addEventListener("mousemove",v),a.addEventListener("mouseleave",y),a.addEventListener("mousedrag",E),a.addEventListener("drop",T);var s=o.x.toFixed(2)+" / "+o.y.toFixed(2)+" / "+o.z.toFixed(2),l=new Potree.TextSprite(s);l.setBorderColor({r:0,g:255,b:0,a:1}),l.material.depthTest=!1,l.material.opacity=0,l.position.copy(t),l.position.y+=.5;var d=new Potree.TextSprite(s);d.setBorderColor({r:0,g:255,b:0,a:1}),d.material.depthTest=!1,d.material.opacity=0,d.position.copy(t),d.position.y+=.5;var c=new THREE.Color(16711680),g=new THREE.Geometry;g.vertices.push(t.clone(),t.clone()),g.colors.push(c,c,c);var P=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,linewidth:10});P.depthTest=!1,sConnection=new THREE.Line(g,P);var b=new Potree.TextSprite(0);b.setBorderColor({r:0,g:255,b:0,a:0}),b.setBackgroundColor({r:0,g:255,b:0,a:0}),b.material.depthTest=!1,b.position.copy(t),b.position.y+=.5,p.sceneRoot.add(sConnection),p.sceneRoot.add(l),p.sceneRoot.add(d),p.sceneRoot.add(b),m===h.DEFAULT?(m=h.PICKING,p.activeMeasurement=new i,p.activeMeasurement.spheres.push(n)):m===h.PICKING&&p.sceneRoot.remove(n),p.activeMeasurement.points.push(t),p.activeMeasurement.spheres.push(a),p.activeMeasurement.sphereLabels.push(l),p.activeMeasurement.sphereLabels.push(d),p.activeMeasurement.edges.push(sConnection),p.activeMeasurement.edgeLabels.push(b);var e={type:"newpoint",position:o.clone()};p.dispatchEvent(e)}}}function a(e){if(p.mouse.x=e.clientX/p.domElement.clientWidth*2-1,p.mouse.y=2*-(e.clientY/p.domElement.clientHeight)+1,p.dragstart)p.dragstart.object.dispatchEvent({type:"mousedrag",event:e});else if(m==h.PICKING&&p.activeMeasurement){var t=u();if(t)if(1===p.activeMeasurement.spheres.length){var o=t.clone(),i=p.activeMeasurement.spheres[0];i.position.copy(t)}else{var o=t.clone(),r=p.activeMeasurement.spheres.length,i=p.activeMeasurement.spheres[r-1],n=p.activeMeasurement.sphereLabels[r-1],a=p.activeMeasurement.edges[r-2],s=p.activeMeasurement.edgeLabels[r-2],l=o.x.toFixed(2)+" / "+o.y.toFixed(2)+" / "+o.z.toFixed(2);n.setText(l),i.position.copy(t),n.position.copy(t),n.position.y+=.5,a.geometry.vertices[1].copy(t),a.geometry.verticesNeedUpdate=!0,a.geometry.computeBoundingSphere();var d=a.geometry.vertices[1].clone().add(a.geometry.vertices[0]).multiplyScalar(.5),f=a.geometry.vertices[0].distanceTo(a.geometry.vertices[1]).toFixed(2);s.position.copy(d),s.setText(f),s.scale.multiplyScalar(10)}}else{var t=c();t?(t.object.dispatchEvent({type:"mousemove",target:t.object,event:e}),p.hoveredElement&&p.hoveredElement!==t.object&&p.hoveredElement.dispatchEvent({type:"mouseleave",target:p.hoveredElement,event:e}),p.hoveredElement=t.object):(p.hoveredElement&&p.hoveredElement.dispatchEvent({type:"mouseleave",target:p.hoveredElement,event:e}),p.hoveredElement=null)}}function s(){if(m==h.PICKING){var e=p.activeMeasurement.spheres.pop(),t=p.activeMeasurement.edges.pop(),o=p.activeMeasurement.sphereLabels.pop(),i=p.activeMeasurement.edgeLabels.pop();p.sceneRoot.remove(e),p.sceneRoot.remove(t),p.sceneRoot.remove(o),p.sceneRoot.remove(i),p.measurements.push(p.activeMeasurement),p.activeMeasurement=void 0,m=h.DEFAULT,p.setEnabled(!1)}}function l(e){if(1===e.which){var t=c();t&&(p.dragstart={object:t.object,sceneClickPos:t.point,sceneStartPos:p.sceneRoot.position.clone(),mousePos:{x:p.mouse.x,y:p.mouse.y}})}else 3===e.which&&s(e)}function d(e){p.dragstart&&(p.dragstart.object.dispatchEvent({type:"drop",event:e}),p.dragstart=null)}function c(){var e=new THREE.Vector3(p.mouse.x,p.mouse.y,.5);e.unproject(p.camera);var t=new THREE.Raycaster;t.ray.set(p.camera.position,e.sub(p.camera.position).normalize());for(var o=[],i=0;i<p.measurements.length;i++)for(var r=p.measurements[i],n=0;n<r.spheres.length;n++)o.push(r.spheres[n]);var a=t.intersectObjects(o,!0);return a.length>0?a[0]:!1}function u(){var e=new THREE.Vector3(p.mouse.x,p.mouse.y,.5);e.unproject(p.camera);var t=e.sub(p.camera.position).normalize(),o=new THREE.Ray(p.camera.position,t),i=[];p.scene.traverse(function(e){e instanceof Potree.PointCloudOctree&&i.push(e)});for(var r=null,n=null,a=0;a<i.length;a++){var s=i[a],l=s.pick(p.renderer,p.camera,o,{accuracy:p.accuracy});if(l){var d=p.camera.position.distanceTo(l.position);(!r||n>d)&&(r=l,n=d)}}return r?r.position:null}var p=this;this.enabled=!1,this.scene=e,this.camera=t,this.renderer=o,this.domElement=o.domElement,this.mouse={x:0,y:0},this.accuracy=.5;var h={DEFAULT:0,PICKING:1},m=h.DEFAULT,f=new THREE.SphereGeometry(.4,10,10);this.activeMeasurement,this.measurements=[],this.sceneMeasurement=new THREE.Scene,this.sceneRoot=new THREE.Object3D,this.sceneMeasurement.add(this.sceneRoot),this.light=new THREE.DirectionalLight(16777215,1),this.light.position.set(0,0,10),this.light.lookAt(new THREE.Vector3(0,0,0)),this.sceneMeasurement.add(this.light),this.hoveredElement=null;var v=function(e){e.target.material.emissive.setHex(8947848)},y=function(e){e.target.material.emissive.setHex(0)},E=function(e){var t=u();if(t)for(var o=0;o<p.measurements.length;o++){var i=p.measurements[o],r=i.spheres.indexOf(p.dragstart.object);if(r>=0){var n=i.spheres[r];if(0===r){var a=i.edges[r],s=i.edgeLabels[r];n.position.copy(t),a.geometry.vertices[0].copy(t),a.geometry.verticesNeedUpdate=!0,a.geometry.computeBoundingSphere();var l=a.geometry.vertices[0].clone().add(a.geometry.vertices[1]).multiplyScalar(.5),d=a.geometry.vertices[0].distanceTo(a.geometry.vertices[1]).toFixed(2);s.position.copy(l),s.setText(d),s.scale.multiplyScalar(10)}else if(r===i.spheres.length-1){var a=i.edges[r-1],s=i.edgeLabels[r-1];n.position.copy(t),a.geometry.vertices[1].copy(t),a.geometry.verticesNeedUpdate=!0,a.geometry.computeBoundingSphere();var l=a.geometry.vertices[0].clone().add(a.geometry.vertices[1]).multiplyScalar(.5),d=a.geometry.vertices[0].distanceTo(a.geometry.vertices[1]).toFixed(2);s.position.copy(l),s.setText(d),s.scale.multiplyScalar(10)}else{var c=i.edges[r-1],h=i.edges[r],m=i.edgeLabels[r-1],f=i.edgeLabels[r];n.position.copy(t),c.geometry.vertices[1].copy(t),c.geometry.verticesNeedUpdate=!0,c.geometry.computeBoundingSphere(),h.geometry.vertices[0].copy(t),h.geometry.verticesNeedUpdate=!0,h.geometry.computeBoundingSphere();var v=c.geometry.vertices[0].clone().add(c.geometry.vertices[1]).multiplyScalar(.5),y=c.geometry.vertices[0].distanceTo(c.geometry.vertices[1]).toFixed(2);m.position.copy(v),m.setText(y),m.scale.multiplyScalar(10);var E=h.geometry.vertices[0].clone().add(h.geometry.vertices[1]).multiplyScalar(.5),T=h.geometry.vertices[0].distanceTo(h.geometry.vertices[1]).toFixed(2);f.position.copy(E),f.setText(T),f.scale.multiplyScalar(10)}break}}e.event.stopImmediatePropagation()},T=function(){};this.setEnabled=function(e){if(this.enabled!==e&&(this.enabled=e,e)){m=h.PICKING,p.activeMeasurement=new i;var t=new THREE.Mesh(f,r());p.sceneRoot.add(t),p.activeMeasurement.spheres.push(t),t.addEventListener("mousemove",v),t.addEventListener("mouseleave",y),t.addEventListener("mousedrag",E),t.addEventListener("drop",T)
}},this.update=function(){for(var e=[],o=0;o<this.measurements.length;o++)e.push(this.measurements[o]);this.activeMeasurement&&e.push(this.activeMeasurement);for(var o=0;o<e.length;o++){for(var i=e[o],r=0;r<i.spheres.length;r++){var n=i.spheres[r],a=n.getWorldPosition().applyMatrix4(this.camera.matrixWorldInverse),s=(new THREE.Vector4(a.x,a.y,a.z).applyMatrix4(t.projectionMatrix),Math.abs(a.z/60));n.scale.set(s,s,s)}for(var r=0;r<i.edgeLabels.length;r++){var l=i.edgeLabels[r],a=l.getWorldPosition().applyMatrix4(this.camera.matrixWorldInverse),s=Math.abs(a.z/10),d=l.scale.length();l.scale.multiplyScalar(s/d)}}this.light.position.copy(this.camera.position),this.light.lookAt(this.camera.getWorldDirection().add(this.camera.position))},this.render=function(){this.update(),o.render(this.sceneMeasurement,this.camera)},this.domElement.addEventListener("click",n,!1),this.domElement.addEventListener("mousemove",a,!1),this.domElement.addEventListener("mousedown",l,!1),this.domElement.addEventListener("mouseup",d,!0)},Potree.MeasuringTool.prototype=Object.create(THREE.EventDispatcher.prototype),Potree.ProfileTool=function(e,t,o){THREE.Object3D.call(this);var i=new THREE.BoxGeometry(1,1,1,1,1,1),r=new THREE.MeshBasicMaterial({color:16711680,transparent:!0,opacity:.3});this.profileFrustum=new THREE.Mesh(i,r),this.add(this.profileFrustum),this.camera=new THREE.OrthographicCamera(-e/2,e/2,t/2,-t/2,1,1+o),this.add(this.camera),this.setDimension(e,t,o),this.rtProfile=new THREE.WebGLRenderTarget(512,512,{minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBFormat}),this.hudGeometry=new THREE.BoxGeometry(2,2,1),this.hudMaterial=new THREE.MeshBasicMaterial({color:16777215,map:this.rtProfile}),this.hudMaterial.depthTest=!1,this.hudElement=new THREE.Mesh(this.hudGeometry,this.hudMaterial),this.hudElement.scale.set(1,1,1),this.hudElement.position.set(0,0,0);var n=new THREE.Vector3(0,0,0),a=new THREE.Vector3(10,0,0);this.setCoordinates(n,a)},Potree.ProfileTool.prototype=Object.create(THREE.Object3D.prototype),Potree.ProfileTool.prototype.setDimension=function(e,t,o){this.profileFrustum.scale.set(e,t,o),this.width=e,this.height=t,this.depth=o,this.camera.left=-e/2,this.camera.right=e/2,this.camera.top=t/2,this.camera.bottom=-t/2,this.camera.updateProjectionMatrix()},Potree.ProfileTool.prototype.setOrientation=function(e){var t=this.position.clone();this.position.add(e),this.lookAt(t),this.position.copy(t),this.camera.position.copy(t.clone().add(e)),this.camera.lookAt(t)},Potree.ProfileTool.prototype.setCoordinates=function(e,t){var o=e.distanceTo(t);this.setDimension(o,this.height,this.depth);var i=(new THREE.Vector3).addVectors(e,t).multiplyScalar(.5),r=(new THREE.Vector3).subVectors(t,e),n=new THREE.Vector3(r.z,0,-r.x);this.position.set(0,0,0),this.lookAt(n),this.position.copy(i),this.start=e,this.end=t},Potree.ProfileTool.prototype.render=function(e,t){this.camera.matrixWorld.copy(this.matrixWorld),t.traverse(function(e){e instanceof Potree.PointCloudOctree&&(e.material.oldSize=e.material.size,e.material.size=0)}),e.render(t,this.camera,this.rtProfile,!0),t.traverse(function(e){e instanceof Potree.PointCloudOctree&&(e.material.size=e.material.oldSize)})},Potree.TranslationTool=function(e){THREE.Object3D.call(this);var t=this;this.camera=e,this.geometry=new THREE.Geometry,this.material=new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.STATE={DEFAULT:0,TRANSLATE_X:1,TRANSLATE_Y:2,TRANSLATE_Z:3},this.parts={ARROW_X:{name:"arrow_x",object:void 0,color:new THREE.Color(16711680),state:this.STATE.TRANSLATE_X},ARROW_Y:{name:"arrow_y",object:void 0,color:new THREE.Color(65280),state:this.STATE.TRANSLATE_Y},ARROW_Z:{name:"arrow_z",object:void 0,color:new THREE.Color(255),state:this.STATE.TRANSLATE_Z}},this.translateStart,this.state=this.STATE.DEFAULT,this.highlighted,this.targets,this.build=function(){var e=t.createArrow(t.parts.ARROW_X,t.parts.ARROW_X.color);e.rotation.z=-Math.PI/2;var o=t.createArrow(t.parts.ARROW_Y,t.parts.ARROW_Y.color),i=t.createArrow(t.parts.ARROW_Z,t.parts.ARROW_Z.color);i.rotation.x=-Math.PI/2,t.add(e),t.add(o),t.add(i);var r=t.createBox(new THREE.Color(16776960));r.scale.z=.02,r.position.set(.5,.5,0);var n=t.createBox(new THREE.Color(16711935));n.scale.y=.02,n.position.set(.5,0,-.5);var a=t.createBox(new THREE.Color(65535));a.scale.x=.02,a.position.set(0,.5,-.5),t.add(r),t.add(n),t.add(a),t.parts.ARROW_X.object=e,t.parts.ARROW_Y.object=o,t.parts.ARROW_Z.object=i,t.scale.multiplyScalar(5)},this.createBox=function(e){var t=new THREE.BoxGeometry(1,1,1),o=new THREE.MeshBasicMaterial({color:e,transparent:!0,opacity:.5}),i=new THREE.Mesh(t,o);return i},this.createArrow=function(e,t){var o=new THREE.MeshBasicMaterial({color:t}),i=new THREE.CylinderGeometry(.1,.1,3,10,1,!1),r=o,n=new THREE.Mesh(i,r);n.position.y=1.5;var a=new THREE.CylinderGeometry(0,.3,1,10,1,!1),s=o,l=new THREE.Mesh(a,s);l.position.y=3;var d=new THREE.Object3D;return d.add(n),d.add(l),d.partID=e,d.material=o,d},this.setHighlighted=function(e){return void 0===e?void(t.highlighted&&(t.highlighted.object.material.color=t.highlighted.color,t.highlighted=void 0)):(void 0!==t.highlighted&&t.highlighted!==e&&(t.highlighted.object.material.color=t.highlighted.color),t.highlighted=e,void(e.object.material.color=new THREE.Color(16776960)))},this.getHoveredObject=function(e){var o=new THREE.Vector3(e.x,e.y,.5);o.unproject(t.camera);var i=new THREE.Raycaster;i.ray.set(t.camera.position,o.sub(t.camera.position).normalize());var r=i.intersectObject(t,!0);if(0===r.length)return void t.setHighlighted(void 0);var n=r[0],a=n.object.parent.partID;return a},this.onMouseMove=function(e){var o=e.normalizedPosition;if(t.state===t.STATE.DEFAULT)t.setHighlighted(t.getHoveredObject(o));else if(t.state===t.STATE.TRANSLATE_X||t.state===t.STATE.TRANSLATE_Y||t.state===t.STATE.TRANSLATE_Z){var i=t.start.lineStart.clone(),r=t.start.lineEnd.clone().sub(t.start.lineStart);r.normalize();var n=new THREE.Vector3(o.x,o.y),a=(new THREE.Vector3).subVectors(n,i).dot(r),s=r.clone().multiplyScalar(a).add(i);s.unproject(t.camera);var l=s.clone().sub(t.position);t.position.copy(s);for(var d=0;d<t.targets.length;d++){var c=t.targets[0];c.position.add(l)}e.signal.halt()}},this.onMouseDown=function(e){if(t.state===t.STATE.DEFAULT){var o=t.getHoveredObject(e.normalizedPosition,t.camera);if(o){t.state=o.state;var i,r=t.position.clone();t.state===t.STATE.TRANSLATE_X?(i=t.position.clone(),i.x+=2):t.state===t.STATE.TRANSLATE_Y?(i=t.position.clone(),i.y+=2):t.state===t.STATE.TRANSLATE_Z&&(i=t.position.clone(),i.z-=2),r.project(t.camera),i.project(t.camera),t.start={mouse:e.normalizedPosition,lineStart:r,lineEnd:i},e.signal.halt()}}},this.onMouseUp=function(){t.setHighlighted(),t.state=t.STATE.DEFAULT},this.setTargets=function(e){if(t.targets=e,0!==t.targets.length){var o=e[0].position.clone();t.position.copy(o)}},this.build()},Potree.TranslationTool.prototype=Object.create(THREE.Object3D.prototype);